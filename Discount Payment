import streamlit as st
from discount_logic import calculate_discount_policy
from utils import format_number_gr, format_percentage_gr
import locale

locale.setlocale(locale.LC_ALL, 'el_GR.utf8')

st.set_page_config(page_title="Πολιτική Έκπτωσης για Πληρωμή Τοις Μετρητοίς")
st.title("Ανάλυση Πολιτικής Έκπτωσης για Πληρωμή Τοις Μετρητοίς")

st.header("📥 Εισαγωγή Δεδομένων")

col1, col2 = st.columns(2)

with col1:
    current_sales = st.number_input("Τρέχουσες Πωλήσεις (€)", value=1000.0, step=100.0, help="Οι συνολικές πωλήσεις πριν την εφαρμογή της έκπτωσης.")
    extra_sales = st.number_input("Επιπλέον Πωλήσεις λόγω Έκπτωσης (€)", value=250.0, step=50.0, help="Εκτιμώμενες επιπλέον πωλήσεις λόγω της παροχής έκπτωσης.")
    discount_rate = st.number_input("Έκπτωση για Πληρωμή Τοις Μετρητοίς (%)", value=2.0, step=0.1, help="Το ποσοστό έκπτωσης που προσφέρεται για πληρωμή τοις μετρητοίς.") / 100
    pct_accepts_discount = st.number_input("% Πελατών που Αποδέχεται την Έκπτωση", value=50.0, help="Ποσοστό πελατών που αναμένεται να αποδεχθεί την έκπτωση.") / 100
    days_accept_discount = st.number_input("Πελάτες που Δέχονται: Ημέρες Πληρωμής", value=10.0, help="Ημέρες που απαιτούνται για πληρωμή από τους πελάτες που αποδέχονται την έκπτωση.")
    cost_pct = st.number_input("Κόστος Πωλήσεων (%)", value=80.0, help="Το ποσοστό του κόστους επί των πωλήσεων.") / 100

with col2:
    pct_rejects_discount = st.number_input("% Πελατών που Δεν Αποδέχεται", value=50.0, help="Ποσοστό πελατών που δεν αποδέχεται την έκπτωση.") / 100
    days_reject_discount = st.number_input("Πελάτες που Δεν Δέχονται: Ημέρες Πληρωμής", value=120.0, help="Ημέρες πληρωμής από τους πελάτες που δεν δέχονται την έκπτωση.")
    cash_payment_days = st.number_input("Μέρες για Τοις Μετρητοίς Πληρωμή", value=10.0, help="Οι ημέρες εντός των οποίων ισχύει η έκπτωση για πληρωμή τοις μετρητοίς.")
    capital_cost = st.number_input("Κόστος Κεφαλαίου (WACC %)", value=20.0, help="Το κόστος κεφαλαίου της επιχείρησης.") / 100
    current_collection_days = st.number_input("Τρέχουσα Μέση Περίοδος Είσπραξης (ημέρες)", value=90.0, help="Η σημερινή μέση περίοδος είσπραξης από τους πελάτες.")
    supplier_payment_days = st.number_input("Μέση Περίοδος Αποπληρωμής Προμηθευτών", value=0.0, help="Ο χρόνος αποπληρωμής των προμηθευτών.")

if st.button("🔍 Υπολογισμός"):
    results = calculate_discount_policy(
        current_sales,
        extra_sales,
        discount_rate,
        pct_accepts_discount,
        days_accept_discount,
        pct_rejects_discount,
        days_reject_discount,
        cash_payment_days,
        cost_pct,
        capital_cost,
        current_collection_days,
        supplier_payment_days
    )

    st.subheader("📊 Αποτελέσματα")
    st.metric("Τρέχουσες Απαιτήσεις", format_number_gr(results['current_receivables']) + " €")
    st.metric("Νέα Μέση Περίοδος Είσπραξης", f"{results['new_avg_collection']} ημέρες")
    st.metric("Απαιτήσεις μετά την Έκπτωση", format_number_gr(results['receivables_after_discount']) + " €")
    st.metric("Αποδέσμευση Κεφαλαίων (Έκπτωση)", format_number_gr(results['capital_released_discount']) + " €")
    st.metric("Νέα Μέση Περίοδος μετά Αύξηση Πωλήσεων", f"{results['new_avg_collection_incl_sales']} ημέρες")
    st.metric("Απαιτήσεις μετά την Αύξηση Πωλήσεων", format_number_gr(results['receivables_after_sales']) + " €")
    st.metric("Συνολική Αποδέσμευση Κεφαλαίων", format_number_gr(results['capital_released_total']) + " €")
    st.metric("Κέρδος από Επιπλέον Πωλήσεις", format_number_gr(results['profit_extra_sales']) + " €")
    st.metric("Κέρδος από Αποδέσμευση Κεφαλαίου", format_number_gr(results['capital_profit']) + " €")
    st.metric("Κόστος Έκπτωσης", format_number_gr(results['discount_cost']) + " €")

    st.success(f"💰 Συνολικό Κέρδος από την Πρόταση (NPV): {format_number_gr(results['total_profit'])} €")
    st.info(f"📉 Μέγιστη Επιτρεπτή Έκπτωση (Break-even): {format_percentage_gr(results['max_discount_rate'])}")
    st.info(f"✅ Προτεινόμενη Έκπτωση: {format_percentage_gr(results['optimal_discount_rate'])}")
