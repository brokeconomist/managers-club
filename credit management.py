import streamlit as st

# --- Πυρήνας υπολογισμών ---
def credit_management_analysis(
    ποσοστό_έκπτωσης,
    ποσοστό_τοις_μετρητοίς,
    ημέρες_τοις_μετρητοίς,
    μέγιστο_ποσοστό_έκπτωσης,
    μέγιστο_ποσοστό_τοις_μετρητοίς,
    μέγιστες_ημέρες_τοις_μετρητοίς,
    αξία_υποχρεώσεων,
    πλήθος_πληρωτέων,
    πλήθος_πελατών,
    μέσο_ποσό_εισπράξεων_πελάτη,
    ανεξόφλητες_πωλήσεις,
    ημέρες_έκπτωσης_πελάτη,
):
    if abs(ποσοστό_έκπτωσης + ποσοστό_τοις_μετρητοίς - 1) > 0.0001:
        return "Σφάλμα: Το ποσοστό έκπτωσης και τοις μετρητοίς πρέπει να αθροίζουν 100%", None
    if abs(μέγιστο_ποσοστό_έκπτωσης + μέγιστο_ποσοστό_τοις_μετρητοίς - 1) > 0.0001:
        return "Σφάλμα: Τα μέγιστα ποσοστά πρέπει να αθροίζουν 100%", None

    αποτελέσματα = {}

    # 1. Σταθμισμένο Ποσό Έκπτωσης
    σταθμισμένο_ποσό_έκπτωσης = (
        (πλήθος_πληρωτέων * ποσοστό_έκπτωσης)
        / (365 / ημέρες_τοις_μετρητοίς)
        * (πλήθος_πελατών / πλήθος_πληρωτέων)
    )
    αποτελέσματα["Σταθμισμένο Ποσό Έκπτωσης"] = σταθμισμένο_ποσό_έκπτωσης

    # 2. Σταθμισμένος Χρόνος Έκπτωσης
    σταθμισμένος_χρόνος = (
        (πλήθος_πληρωτέων * (1 + αξία_υποχρεώσεων) * ποσοστό_τοις_μετρητοίς)
        / (365 / μέγιστες_ημέρες_τοις_μετρητοίς)
        * (
            (
                πλήθος_πελατών
                + ((πλήθος_πληρωτέων * αξία_υποχρεώσεων) / πλήθος_πληρωτέων)
                * μέσο_ποσό_εισπράξεων_πελάτη
            )
            / (1 + αξία_υποχρεώσεων)
        )
        / πλήθος_πληρωτέων
    )
    αποτελέσματα["Σταθμισμένος Χρόνος Έκπτωσης"] = σταθμισμένος_χρόνος

    # 3. Αποδέσμευση Κεφαλαίου
    αποδέσμευση_κεφαλαίου = αξία_υποχρεώσεων - (πλήθος_πληρωτέων / πλήθος_πελατών) * ανεξόφλητες_πωλήσεις
    αποτελέσματα["Αποδέσμευση Κεφαλαίου"] = αποδέσμευση_κεφαλαίου

    # 4. Μέσες Ημέρες Είσπραξης
    μέσες_ημέρες = ημέρες_έκπτωσης_πελάτη * ποσοστό_έκπτωσης + ημέρες_τοις_μετρητοίς * ποσοστό_τοις_μετρητοίς
    αποτελέσματα["Μέσες Ημέρες Είσπραξης"] = μέσες_ημέρες

    # 5. Συνολική Ανάγκη Κεφαλαίου
    συνολικό_κεφάλαιο = αποδέσμευση_κεφαλαίου * μέσες_ημέρες / 365
    αποτελέσματα["Συνολική Ανάγκη Κεφαλαίου"] = συνολικό_κεφάλαιο

    # 6. Απόδοση Κεφαλαίου
    απόδοση_κεφαλαίου = συνολικό_κεφάλαιο * ποσοστό_έκπτωσης
    αποτελέσματα["Απόδοση Κεφαλαίου"] = απόδοση_κεφαλαίου

    # 7. Καθαρό Όφελος από Έκπτωση
    καθαρό_όφελος = απόδοση_κεφαλαίου - σταθμισμένο_ποσό_έκπτωσης
    αποτελέσματα["Καθαρό Όφελος από Έκπτωση"] = καθαρό_όφελος

    return None, αποτελέσματα

# --- Streamlit UI ---
def main():
    st.set_page_config("Διαχείριση Πιστώσεων", layout="wide")
    st.title("🏦 Διαχείριση Πιστώσεων")
    st.caption("Ανάλυση της επίπτωσης εκπτώσεων, όρων πίστωσης και κεφαλαιακών αναγκών.")

    st.markdown("## 🔧 Εισαγωγή Δεδομένων")

    col1, col2, col3 = st.columns(3)
    with col1:
        ποσοστό_έκπτωσης = st.number_input("Ποσοστό Έκπτωσης (%)", 0.0, 100.0, 5.0) / 100
        μέγιστο_ποσοστό_έκπτωσης = st.number_input("Μέγιστο Ποσοστό Έκπτωσης (%)", 0.0, 100.0, 80.0) / 100
        αξία_υποχρεώσεων = st.number_input("Αξία Πληρωτέων Υποχρεώσεων", 0.0, 10.0, 0.2)

    with col2:
        ποσοστό_τοις_μετρητοίς = st.number_input("Ποσοστό Πληρωμών Τοις Μετρητοίς (%)", 0.0, 100.0, 95.0) / 100
        μέγιστο_ποσοστό_τοις_μετρητοίς = st.number_input("Μέγιστο Ποσοστό Τοις Μετρητοίς (%)", 0.0, 100.0, 20.0) / 100
        ανεξόφλητες_πωλήσεις = st.number_input("Ανεξόφλητες Πωλήσεις (€)", 0.0, 1_000_000.0, 2000.0)

    with col3:
        ημέρες_τοις_μετρητοίς = st.number_input("Ημέρες Τοις Μετρητοίς", 1, 365, 30)
        μέγιστες_ημέρες_τοις_μετρητοίς = st.number_input("Μέγιστες Ημέρες Τοις Μετρητοίς", 1, 365, 45)
        ημέρες_έκπτωσης_πελάτη = st.number_input("Ημέρες Έκπτωσης Πελάτη", 0.0, 365.0, 15.0)

    st.markdown("## 👥 Επιχειρησιακά Μεγέθη")

    col4, col5, col6 = st.columns(3)
    with col4:
        πλήθος_πελατών = st.number_input("Πλήθος Πελατών", 1, 10000, 50)
    with col5:
        πλήθος_πληρωτέων = st.number_input("Πλήθος Πληρωτέων", 1, 10000, 100)
    with col6:
        μέσο_ποσό_εισπράξεων_πελάτη = st.number_input("Μέσο Ποσό Εισπράξεων Πελάτη (€)", 0.0, 1_000_000.0, 10_000.0)

    st.markdown("---")
    if st.button("📊 Υπολογισμός"):
        error, results = credit_management_analysis(
            ποσοστό_έκπτωσης,
            ποσοστό_τοις_μετρητοίς,
            ημέρες_τοις_μετρητοίς,
            μέγιστο_ποσοστό_έκπτωσης,
            μέγιστο_ποσοστό_τοις_μετρητοίς,
            μέγιστες_ημέρες_τοις_μετρητοίς,
            αξία_υποχρεώσεων,
            πλήθος_πληρωτέων,
            πλήθος_πελατών,
            μέσο_ποσό_εισπράξεων_πελάτη,
            ανεξόφλητες_πωλήσεις,
            ημέρες_έκπτωσης_πελάτη,
        )

        if error:
            st.error(error)
        else:
            st.success("✅ Ο Υπολογισμός Ολοκληρώθηκε")
            st.subheader("📈 Αποτελέσματα")
            for label, value in results.items():
                st.markdown(f"**{label}:** `{value:,.2f} €`")

if __name__ == "__main__":
    main()
